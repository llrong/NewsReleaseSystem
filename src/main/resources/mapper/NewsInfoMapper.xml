<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rong.dao.NewsInfoMapper">
  <resultMap id="BaseResultMap" type="com.rong.web.pojo.NewsInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="digest" jdbcType="VARCHAR" property="digest" />
    <result column="typeId" jdbcType="INTEGER" property="typeId" />
    <result column="isCheck" jdbcType="TINYINT" property="isCheck" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="hits" jdbcType="INTEGER" property="hits" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="created" jdbcType="INTEGER" property="created" />
    <result column="updated" jdbcType="INTEGER" property="updated" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.rong.web.pojo.NewsInfo">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, author, digest, typeId, isCheck, picture, hits, remark, created, updated, 
    deleted
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from newsinfo
   where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExample" parameterType="com.rong.web.pojo.NewsInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from newsinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from newsinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from newsinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.rong.web.pojo.NewsInfo" useGeneratedKeys="true">
    insert into newsinfo (title, author, digest, 
      typeId, isCheck, picture, 
      hits, remark, created, 
      updated, deleted, content
      )
    values (#{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{digest,jdbcType=VARCHAR}, 
      #{typeId,jdbcType=INTEGER}, #{isCheck,jdbcType=TINYINT}, #{picture,jdbcType=VARCHAR}, 
      #{hits,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{created,jdbcType=INTEGER}, 
      #{updated,jdbcType=INTEGER}, #{deleted,jdbcType=TINYINT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.rong.web.pojo.NewsInfo" useGeneratedKeys="true">
    insert into newsinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="digest != null">
        digest,
      </if>
      <if test="typeId != null">
        typeId,
      </if>
      <if test="isCheck != null">
        isCheck,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="hits != null">
        hits,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="digest != null">
        #{digest,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="isCheck != null">
        #{isCheck,jdbcType=TINYINT},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="hits != null">
        #{hits,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rong.web.pojo.NewsInfo">
    update newsinfo
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="digest != null">
        digest = #{digest,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        typeId = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="isCheck != null">
        isCheck = #{isCheck,jdbcType=TINYINT},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="hits != null">
        hits = #{hits,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.rong.web.pojo.NewsInfo">
    update newsinfo
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      digest = #{digest,jdbcType=VARCHAR},
      typeId = #{typeId,jdbcType=INTEGER},
      isCheck = #{isCheck,jdbcType=TINYINT},
      picture = #{picture,jdbcType=VARCHAR},
      hits = #{hits,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      created = #{created,jdbcType=INTEGER},
      updated = #{updated,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=TINYINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rong.web.pojo.NewsInfo">
    update newsinfo
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      digest = #{digest,jdbcType=VARCHAR},
      typeId = #{typeId,jdbcType=INTEGER},
      isCheck = #{isCheck,jdbcType=TINYINT},
      picture = #{picture,jdbcType=VARCHAR},
      hits = #{hits,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      created = #{created,jdbcType=INTEGER},
      updated = #{updated,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.rong.web.PO.NewsInfo">-->
    <!--update newsinfo-->
    <!--set title = #{title,jdbcType=VARCHAR},-->
    <!--author = #{author,jdbcType=VARCHAR},-->
    <!--digest = #{digest,jdbcType=VARCHAR},-->
    <!--typeId = #{typeId,jdbcType=INTEGER},-->
    <!--isCheck = #{isCheck,jdbcType=TINYINT},-->
    <!--picture = #{picture,jdbcType=VARCHAR},-->
    <!--hits = #{hits,jdbcType=INTEGER},-->
    <!--remark = #{remark,jdbcType=VARCHAR},-->
    <!--created = #{created,jdbcType=INTEGER},-->
    <!--updated = #{updated,jdbcType=INTEGER},-->
    <!--deleted = #{deleted,jdbcType=TINYINT},-->
    <!--content = #{content,jdbcType=LONGVARCHAR}-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->
  <!--<update id="updateByPrimaryKey" parameterType="com.rong.web.PO.NewsInfo">-->
    <!--update newsinfo-->
    <!--set title = #{title,jdbcType=VARCHAR},-->
    <!--author = #{author,jdbcType=VARCHAR},-->
    <!--digest = #{digest,jdbcType=VARCHAR},-->
    <!--typeId = #{typeId,jdbcType=INTEGER},-->
    <!--isCheck = #{isCheck,jdbcType=TINYINT},-->
    <!--picture = #{picture,jdbcType=VARCHAR},-->
    <!--hits = #{hits,jdbcType=INTEGER},-->
    <!--remark = #{remark,jdbcType=VARCHAR},-->
    <!--created = #{created,jdbcType=INTEGER},-->
    <!--updated = #{updated,jdbcType=INTEGER},-->
    <!--deleted = #{deleted,jdbcType=TINYINT}-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->



  <select id="selectAllNews" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from newsinfo
    where deleted = 0
  </select>

  <select id="selectMyNews" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from newsinfo
    where remark = #{remark,jdbcType=VARCHAR}
    order by created
  </select>

  <select id="selectByTypeId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from newsinfo
    where typeId = #{typeId,jdbcType=INTEGER}
    order by created  limit 10
  </select>

  <select id="selectHotNews" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from newsinfo
    order by hits desc limit 9
  </select>



  <select id="selectCurrNews" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from newsinfo
    order by created desc limit 4
  </select>

  <select id="selectCirNews" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from newsinfo
    order by created  limit 1
  </select>


  <select id="selectCircleNews" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from newsinfo
    order by typeId DESC limit 1
  </select>


  <update id="deleteById" parameterType="java.lang.Integer">
    update newsinfo
    <set>
      deleted = 1,
    </set>
    where id = #{id,jdbcType=TINYINT}
  </update>

  <update id="updateByAuthor" parameterType="com.rong.web.pojo.NewsInfo">
    update newsinfo
    <set>
      title = #{title,jdbcType=VARCHAR},digest = #{digest,jdbcType=VARCHAR},
      typeId = #{typeId,jdbcType=INTEGER},picture = #{picture,jdbcType=VARCHAR},
      updated = #{updated,jdbcType=INTEGER},content = #{content,jdbcType=VARCHAR},
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByIdByAdmin" parameterType="java.lang.Integer">
    update newsinfo
    <set>
      <if test="isCheck!= null">
        isCheck = 0,
      </if>
    </set>
    where id = id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectNewsById" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from newsinfo
    where id = #{id,jdbcType=INTEGER}
  </select>

</mapper>