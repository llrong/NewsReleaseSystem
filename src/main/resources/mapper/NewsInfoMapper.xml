<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rong.dao.NewsInfoMapper" >
  <resultMap id="BaseResultMap" type="com.rong.web.pojo.NewsInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="digest" property="digest" jdbcType="VARCHAR" />
    <result column="typeId" property="typeId" jdbcType="INTEGER" />
    <result column="isCheck" property="isCheck" jdbcType="TINYINT" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="hits" property="hits" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="INTEGER" />
    <result column="updated" property="updated" jdbcType="INTEGER" />
    <result column="deleted" property="deleted" jdbcType="TINYINT" />

  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, author, digest, typeId, isCheck, picture, hits, remark, created, updated, 
    deleted
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectAllNews" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from newsinfo
    where deleted = 0
  </select>

  <select id="selectMyNews" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from newsinfo
    where remark = #{remark,jdbcType=VARCHAR}
    order by created
  </select>

  <select id="selectByTypeId" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from newsinfo
    where typeId = #{typeId,jdbcType=INTEGER}
    order by created  limit 10
  </select>

  <select id="selectHotNews" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from newsinfo
    order by hits desc limit 9
  </select>



  <select id="selectCurrNews" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from newsinfo
    order by created desc limit 4
  </select>

  <select id="selectCirNews" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from newsinfo
    order by created  limit 1
  </select>


  <select id="selectCircleNews" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from newsinfo
    order by typeId DESC limit 1
  </select>


  <update id="deleteById" parameterType="java.lang.Integer" >
    update newsinfo
    <set >
        deleted = 1,
    </set>
    where id = #{id,jdbcType=TINYINT}
  </update>
  <insert id="insert" parameterType="com.rong.web.pojo.NewsInfo"  >
    insert into newsinfo (title, author, digest, 
      typeId, isCheck, picture, 
      hits, remark, created, 
      updated, deleted, content
      ) values (#{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{digest,jdbcType=VARCHAR},
      #{typeId,jdbcType=INTEGER}, #{isCheck,jdbcType=TINYINT}, #{picture,jdbcType=VARCHAR}, 
      #{hits,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{created,jdbcType=INTEGER}, 
      #{updated,jdbcType=INTEGER}, #{deleted,jdbcType=TINYINT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>

  <update id="updateByAuthor" parameterType="com.rong.web.pojo.NewsInfo" >
    update newsinfo
    <set >
      title = #{title,jdbcType=VARCHAR},digest = #{digest,jdbcType=VARCHAR},
     typeId = #{typeId,jdbcType=INTEGER},picture = #{picture,jdbcType=VARCHAR},
     updated = #{updated,jdbcType=INTEGER},content = #{content,jdbcType=LONGVARCHAR},
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByIdByAdmin" parameterType="java.lang.Integer" >
    update newsinfo
    <set >
      <if test="isCheck!= null" >
        isCheck = 0,
      </if>
    </set>
    where id = id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectNewsById" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from newsinfo
    where id = #{id,jdbcType=INTEGER}
  </select>

</mapper>

